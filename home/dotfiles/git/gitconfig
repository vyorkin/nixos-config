[hub]
  protocol = https
[user]
  name = Vasiliy Yorkin
  email = vasiliy.yorkin@gmail.com
  signingkey = 78C78F27
[alias]
  count = !git shortlog -sn

  a = add
  aa = add -A
  au = add -u
  chunkyadd = add --patch

  # branch
  b = branch -v

  # commit
  c = commit -m
  ca = commit -am                   # commit all with message
  ci = commit
  amend = commit --amend

  # checkout
  co = checkout
  nb = checkout -b

  # cherry-pick
  cp = cherry-pick -x               # grab a change from a branch

  # diff
  d = diff
  dc = diff --cached                # diff staged changes
  last = diff HEAD^                 # diff last committed change

  # tag
  lt = describe --always --tags --abbrev=0

  # log
  l = log --graph --date=short
  changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  changelog = log --pretty=format:\" * %s\"
  shortnocolor = log --pretty=format:\"%h %cr %cn %s\"

  # pull
  pl = pull
  plp = pull --prune
  up = pull --rebase

  # push
  ps = push
  psa = !git remote | xargs -L1 git push --all
  put = push origin HEAD

  # rebase
  rb = rebase
  ra = rebase --abort
  rc = rebase --continue
  rs = rebase --skip
  ri = rebase --interactive

  # remote
  r = remote -v

  # reset
  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
  filelog = log -u                  # show changes to a file
  mt = mergetool                    # fire up the merge tool

  # stash
  ss = stash                        # stash changes
  sl = stash list                   # list stashes
  sa = stash apply                  # apply stash (restore changes)
  sd = stash drop                   # drop stashes (destory changes)
  sp = stash pop

  # status
  s = status -sb
  sl = status

  # tag
  t = tag -n

  # svn helpers
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit
[format]
  pretty = format:%C(magenta)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(white)%s %C(red) [%an]%Creset
[mergetool]
  keepBackup = false
  prompt = false
[mergetool "mvimdiff"]
  cmd="mvim -c 'Gdiff' $MERGED"
  keepbackup=false
[merge]
  summary = true
  verbosity = 1
  tool = mvimdiff
[diff]
  mnemonicprefix = true
[color]
  diff = auto
  status = auto
  branch = auto
  ui = true
[color "diff-highlight"]
  oldNormal = red
  oldHighlight = red 52
  newNormal = green
  newHighlight = green 22
[color "diff"]
  meta = yellow
  frag = magenta
  commit = yellow
  old = red
  new = green
  whitespace = red reverse
[core]
  autocrlf = false
  excludesfile = ~/.gitignore
  editor = nvim
[advice]
  statusHints = false
[apply]
  whitespace = nowarn
[difftool]
  prompt = false
[rerere]
  enabled = false
[help]
  autocorrect = 1
[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f
[log]
  decorate = short
[push]
  default = matching
[merge]
  ff = only
[commit]
  template = ~/.gitmessage
  gpgsign = false
[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
[gui]
  fontui = -family Hack -size 14 -weight normal -slant roman -underline 0 -overstrike 0
  fontdiff = -family Hack -size 12 -weight normal -slant roman -underline 0 -overstrike 0
[github]
  user = vyorkin
